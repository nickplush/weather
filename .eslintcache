[{"/home/niko/work/saveWeather/my-app/src/index.js":"1","/home/niko/work/saveWeather/my-app/src/App.js":"2","/home/niko/work/saveWeather/my-app/src/reducers/index.js":"3","/home/niko/work/saveWeather/my-app/src/actions/getWeather.js":"4","/home/niko/work/saveWeather/my-app/src/components/Header/Header.js":"5","/home/niko/work/saveWeather/my-app/src/components/Weather/MainWeatherWindow.js":"6","/home/niko/work/saveWeather/my-app/src/components/Weather/WindowController.js":"7","/home/niko/work/saveWeather/my-app/src/reducers/cityReducer.js":"8","/home/niko/work/saveWeather/my-app/src/reducers/windowReducer.js":"9","/home/niko/work/saveWeather/my-app/src/actions/changeWindow.js":"10","/home/niko/work/saveWeather/my-app/src/components/Weather/WeekWeather.js":"11","/home/niko/work/saveWeather/my-app/src/components/Weather/DayTodayWeather.js":"12","/home/niko/work/saveWeather/my-app/src/components/Weather/DayTomorrowWeather.js":"13","/home/niko/work/saveWeather/my-app/src/components/Weather/Home.js":"14","/home/niko/work/saveWeather/my-app/src/actions/favoriteActions.js":"15","/home/niko/work/saveWeather/my-app/src/reducers/favoriteReducer.js":"16","/home/niko/work/saveWeather/my-app/src/components/Header/Search/Search.js":"17","/home/niko/work/saveWeather/my-app/src/components/Header/Navigator/Navigator.js":"18","/home/niko/work/saveWeather/my-app/src/debounce.js":"19"},{"size":495,"mtime":1608889729202,"results":"20","hashOfConfig":"21"},{"size":1191,"mtime":1608889479194,"results":"22","hashOfConfig":"21"},{"size":310,"mtime":1608882767134,"results":"23","hashOfConfig":"21"},{"size":1549,"mtime":1608830749360,"results":"24","hashOfConfig":"21"},{"size":859,"mtime":1608912559880,"results":"25","hashOfConfig":"21"},{"size":2902,"mtime":1608914633551,"results":"26","hashOfConfig":"21"},{"size":875,"mtime":1608830183599,"results":"27","hashOfConfig":"21"},{"size":188,"mtime":1608820392122,"results":"28","hashOfConfig":"21"},{"size":353,"mtime":1608825667624,"results":"29","hashOfConfig":"21"},{"size":431,"mtime":1608825667648,"results":"30","hashOfConfig":"21"},{"size":1578,"mtime":1608895924167,"results":"31","hashOfConfig":"21"},{"size":3077,"mtime":1608901979934,"results":"32","hashOfConfig":"21"},{"size":3161,"mtime":1608901867043,"results":"33","hashOfConfig":"21"},{"size":1005,"mtime":1608897162621,"results":"34","hashOfConfig":"21"},{"size":326,"mtime":1608888945266,"results":"35","hashOfConfig":"21"},{"size":250,"mtime":1608882767122,"results":"36","hashOfConfig":"21"},{"size":858,"mtime":1608917804603,"results":"37","hashOfConfig":"21"},{"size":1035,"mtime":1608912559888,"results":"38","hashOfConfig":"21"},{"size":441,"mtime":1608915070057,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1fbcpm4",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/niko/work/saveWeather/my-app/src/index.js",[],["88","89"],"/home/niko/work/saveWeather/my-app/src/App.js",["90"],"import './App.css';\nimport {Header} from \"../src/components/Header/Header\";\nimport {MainWeatherWindow} from \"../src/components/Weather/MainWeatherWindow\";\nimport {WindowController} from \"../src/components/Weather/WindowController\";\nimport {useDispatch} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport {saveCityInfo} from \"../src/actions/getWeather\";\nimport {getFavorite} from \"./actions/favoriteActions\";\n\nfunction App() {\n    const dispatch = useDispatch()\n    const getMyLocation = () => {\n        navigator.geolocation.getCurrentPosition(\n            function (position) {\n                const coords = {\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude\n                }\n                dispatch(saveCityInfo(coords))\n            },\n            function (error) {\n                console.error(\"Error Code = \" + error.code + \" - \" + error.message)\n            }\n        )\n        dispatch(getFavorite())\n    }\n    useEffect(() => getMyLocation(), [])\n    return (\n        <div>\n            <Header/>\n            <MainWeatherWindow/>\n            <WindowController/>\n        </div>\n    );\n}\n\nexport default App;\n","/home/niko/work/saveWeather/my-app/src/reducers/index.js",[],"/home/niko/work/saveWeather/my-app/src/actions/getWeather.js",[],"/home/niko/work/saveWeather/my-app/src/components/Header/Header.js",[],"/home/niko/work/saveWeather/my-app/src/components/Weather/MainWeatherWindow.js",["91"],"/home/niko/work/saveWeather/my-app/src/components/Weather/WindowController.js",["92"],"import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {WeekWeather} from \"./WeekWeather\";\nimport {DayTodayWeather} from \"./DayTodayWeather\";\nimport {DayTomorrowWeather} from \"./DayTomorrowWeather\";\nimport {Home} from \"./Home\";\n\nexport const WindowController = () => {\n    const window = useSelector((state) => state.window)\n\n    const renderContent = () => {\n        switch (window) {\n            case 'Home':\n                return <div><Home/></div>\n            case 'Today':\n                return <div>\n                    <DayTodayWeather/>\n                </div>\n            case 'Tomorrow':\n                return <div>\n                    <DayTomorrowWeather/>\n                </div>\n            case 'Week':\n                return <div>\n                    <WeekWeather/>\n                </div>\n\n        }\n    }\n\n    return (renderContent())\n\n}\n","/home/niko/work/saveWeather/my-app/src/reducers/cityReducer.js",["93"],"export default function (state = null, action) {\n    switch (action.type) {\n        case 'CHANGE_CITY':\n            return action.payload\n        default:\n            return state\n    }\n}\n","/home/niko/work/saveWeather/my-app/src/reducers/windowReducer.js",["94"],"export default function (state = \"Home\", action) {\n    switch (action.type) {\n        case 'TODAY':\n            return action.payload\n        case 'TOMORROW':\n            return action.payload\n        case 'WEEK':\n            return action.payload\n        case 'HOME':\n            return action.payload\n        default:\n            return state\n    }\n}\n","/home/niko/work/saveWeather/my-app/src/actions/changeWindow.js",[],"/home/niko/work/saveWeather/my-app/src/components/Weather/WeekWeather.js",["95"],"import React, {useEffect, useState} from \"react\";\nimport {Box, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useSelector} from \"react-redux\";\nimport {getWeekWeather} from \"../../actions/getWeather\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"max\",\n        display: \"flex\"\n    },\n    card: {\n        height: theme.spacing(15),\n        width: theme.spacing(15),\n        margin: 20,\n        padding: 10\n    }\n}));\n\n\nexport const WeekWeather = () => {\n    const WEEKDAYS = ['Sunday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Monday' ];\n    const classes = useStyles()\n    const myLocation = useSelector((state) => state.myLocation)\n    const [week, setWeek] = useState([])\n    const [time, setTime] = useState(0)\n\n    const fetchWeekWeather = async () => {\n        const newWeek = await getWeekWeather(myLocation)\n        setWeek(newWeek.daily)\n        setTime(newWeek.timezone_offset)\n    }\n\n    const weatherDay = week.map(item => {\n        const date = (item.dt - time)*1000\n        return (\n            <Box border={1} className={classes.card}>\n                <Typography component={'div'}>{WEEKDAYS[new Date(date).getDay()]}</Typography>\n                <Typography component={'div'}>{Math.round(item.temp.day - 273.15)} ℃</Typography>\n                <Typography component={'div'}>{item.weather[0].main}</Typography>\n            </Box>\n        )\n    })\n\n    useEffect(() => fetchWeekWeather(),[myLocation])\n\n    return (<div className={classes.root}>{weatherDay}</div>)\n\n}\n","/home/niko/work/saveWeather/my-app/src/components/Weather/DayTodayWeather.js",["96"],"import React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getDayWeather} from \"../../actions/getWeather\";\nimport {Box, Typography} from \"@material-ui/core\";\nimport {Map, Placemark, YMaps} from \"react-yandex-maps\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"max\",\n        display: \"flex\"\n    },\n    card: {\n        width: theme.spacing(50),\n        background: '#DCDCDC',\n        borderRadius: 10,\n        padding: 10\n    },\n    day: {\n        display: \"flex\",\n        justifyContent: \"start\",\n        padding: 5\n    },\n    map: {\n        width: theme.spacing(100),\n        height: theme.spacing(50),\n    },\n    time: {\n        width: theme.spacing(8)\n    },\n    container: {\n        marginRight: 50\n    }\n}));\n\nexport const DayTodayWeather = () => {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ]\n    const classes = useStyles()\n    const myLocation = useSelector((state) => state.myLocation)\n    const [data, setData] = useState([])\n\n    const fetchDayWeather = async () => {\n        const newDay = await getDayWeather(myLocation)\n        setData(newDay)\n    }\n    useEffect(() => fetchDayWeather(), [myLocation])\n    const weatherDay = data.map(item => {\n        return (\n            <div className={classes.day}>\n                <Typography className={classes.time}>\n                    {new Date(item.dt * 1000).getHours()}:{new Date(item.dt).getMinutes()}\n                </Typography>\n                <Typography>\n                    {Math.round(item.main.temp - 273.15)} ℃,\n                </Typography>\n                <Typography>\n                    {item.weather.main}\n                </Typography>\n                <Typography>\n                    Wind - {item.wind.speed} meter per seconds\n                </Typography>\n            </div>\n        )\n    })\n\n    const mapData = {\n        center: [myLocation.latitude, myLocation.longitude],\n        zoom: 8,\n    };\n\n    const coordinates = [\n        [myLocation.latitude, myLocation.longitude]\n    ];\n\n    return (\n        <div className={'container'}>\n            <div className={classes.container}>\n                <Typography variant={'h3'}>Today</Typography>\n                <Typography variant={'h5'}>{monthNames[new Date().getMonth()]},{new Date().getDate()} </Typography>\n                <div className={\"title_container\"}>\n                    <div className={classes.time}>Time</div>\n                    <div>Weather</div>\n                </div>\n                {weatherDay}\n            </div>\n            <div>\n                <Box border={1}>\n                    <YMaps>\n                        <Map defaultState={mapData} className={classes.map}>\n                            {coordinates.map(coordinate => <Placemark geometry={coordinate}/>)}\n                        </Map>\n                    </YMaps>\n                </Box>\n            </div>\n        </div>\n    )\n}\n","/home/niko/work/saveWeather/my-app/src/components/Weather/DayTomorrowWeather.js",["97"],"import {useSelector} from \"react-redux\";\nimport React, {useEffect, useState} from \"react\";\nimport {getTomorrowWeather} from \"../../actions/getWeather\";\nimport {Box, Typography} from \"@material-ui/core\";\nimport {Map, Placemark, YMaps} from \"react-yandex-maps\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"max\",\n        display: \"flex\"\n    },\n    card: {\n        width: theme.spacing(50),\n        background: '#DCDCDC',\n        borderRadius: 10,\n        padding: 10\n    },\n    day: {\n        display: \"flex\",\n        justifyContent: \"start\",\n        padding: 5\n    },\n    map: {\n        width: theme.spacing(100),\n        height: theme.spacing(50),\n    },\n    time: {\n        width: theme.spacing(8)\n    },\n    container: {\n        marginRight: 50\n    }\n}));\n\nexport const DayTomorrowWeather = () => {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ]\n    const classes = useStyles()\n    const myLocation = useSelector((state) => state.myLocation)\n    const [data, setData] = useState([])\n    const currentDate = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\n    const day = currentDate.getDate()\n\n    const fetchDayWeather = async () => {\n        const newDay = await getTomorrowWeather(myLocation)\n        setData(newDay)\n    }\n    useEffect(() => fetchDayWeather(), [myLocation])\n    const weatherDay = data.map(item => {\n        return (\n            <div className={classes.day}>\n                <Typography className={classes.time}>\n                    {new Date(item.dt * 1000).getHours()}:00\n                </Typography>\n                <Typography>\n                    {Math.round(item.main.temp - 273.15)} ℃,\n                </Typography>\n                <Typography>\n                    {item.weather.main}\n                </Typography>\n                <Typography>\n                    Wind - {item.wind.speed} meter per seconds\n                </Typography>\n            </div>\n        )\n    })\n    const mapData = {\n        center: [myLocation.latitude, myLocation.longitude],\n        zoom: 8,\n    };\n\n    const coordinates = [\n        [myLocation.latitude, myLocation.longitude]\n    ];\n\n    return (\n        <div className={'container'}>\n            <div className={classes.container}>\n                <Typography variant={'h4'}>Tomorrow</Typography>\n                <Typography variant={'h5'}>{monthNames[new Date().getMonth()]},{day} </Typography>\n                <div className={\"title_container\"}>\n                    <div className={classes.time}>Time</div>\n                    <div>Weather</div>\n                </div>\n                {weatherDay}\n            </div>\n            <div>\n                <Box border={1}>\n                    <YMaps>\n                        <Map defaultState={mapData} className={classes.map}>\n                            {coordinates.map(coordinate => <Placemark geometry={coordinate}/>)}\n                        </Map>\n                    </YMaps>\n                </Box>\n            </div>\n        </div>\n    )\n}\n","/home/niko/work/saveWeather/my-app/src/components/Weather/Home.js",["98"],"import React from \"react\";\nimport {Box, Grid, Paper, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {saveCityInfo} from \"../../actions/getWeather\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        display:\"flex\",\n        justifyContent:\"center\",\n        margin: 20,\n        height: 140,\n    }\n}));\n\n\nexport const Home = () => {\n    const dispatch = useDispatch()\n    const classes = useStyles()\n    const arr = useSelector(state=>state.favorite)\n\n    const favorites = arr.map(item => {\n        return (\n            <Grid item xs={2} >\n                <Box border={1} className={classes.card} onClick={()=>{dispatch(saveCityInfo(item.coords)) }}>\n                    <Typography component={'div'} >{item.city}</Typography>\n                </Box>\n            </Grid>\n        )\n    })\n\n    return (\n        <Grid container spacing={12}>\n            {favorites}\n        </Grid>\n    )\n\n}\n","/home/niko/work/saveWeather/my-app/src/actions/favoriteActions.js",[],"/home/niko/work/saveWeather/my-app/src/reducers/favoriteReducer.js",["99"],"export default function (state = [], action) {\n    switch (action.type) {\n        case 'GET_FAVORITE':\n            return action.payload\n        case 'ADD_FAVORITE':\n            return action.payload\n        default:\n            return state\n    }\n}\n","/home/niko/work/saveWeather/my-app/src/components/Header/Search/Search.js",["100"],"/home/niko/work/saveWeather/my-app/src/components/Header/Navigator/Navigator.js",[],"/home/niko/work/saveWeather/my-app/src/debounce.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":27,"column":38,"nodeType":"107","endLine":27,"endColumn":40,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":45,"column":47,"nodeType":"107","endLine":45,"endColumn":59,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":12,"column":9,"nodeType":"113","messageId":"114","endLine":28,"endColumn":10},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","endLine":8,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","endLine":14,"endColumn":2},{"ruleId":"105","severity":1,"message":"118","line":45,"column":40,"nodeType":"107","endLine":45,"endColumn":52,"suggestions":"119"},{"ruleId":"105","severity":1,"message":"120","line":48,"column":40,"nodeType":"107","endLine":48,"endColumn":52,"suggestions":"121"},{"ruleId":"105","severity":1,"message":"120","line":50,"column":40,"nodeType":"107","endLine":50,"endColumn":52,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":20,"nodeType":"125","messageId":"126","endLine":2,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","endLine":10,"endColumn":2},{"ruleId":"115","severity":1,"message":"127","line":6,"column":1,"nodeType":"117","endLine":33,"endColumn":2},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyLocation'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has a missing dependency: 'getWeatherOfMyLocation'. Either include it or remove the dependency array.",["131"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'fetchWeekWeather'. Either include it or remove the dependency array.",["132"],"React Hook useEffect has a missing dependency: 'fetchDayWeather'. Either include it or remove the dependency array.",["133"],["134"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},"Update the dependencies array to be: [getMyLocation]",{"range":"144","text":"145"},"Update the dependencies array to be: [getWeatherOfMyLocation, myLocation]",{"range":"146","text":"147"},"Update the dependencies array to be: [fetchWeekWeather, myLocation]",{"range":"148","text":"149"},"Update the dependencies array to be: [fetchDayWeather, myLocation]",{"range":"150","text":"151"},{"range":"152","text":"151"},[1028,1030],"[getMyLocation]",[1294,1306],"[getWeatherOfMyLocation, myLocation]",[1496,1508],"[fetchWeekWeather, myLocation]",[1336,1348],"[fetchDayWeather, myLocation]",[1465,1477]]