{"version":3,"sources":["actions/city.js","actions/changeWindow.js","logger/constants.js","logger/index.js","helpers/localStorage/constants.js","helpers/localStorage/index.js","actions/favoriteActions.js","reducers/index.js","reducers/windowReducer.js","reducers/cityReducer.js","reducers/favoriteReducer.js","config/algolia.js","components/Header/Search/Search.js","components/Header/Navigator/Navigator.js","components/Header/Header/index.js","api/clients/weatherClient.js","config/apiKeys.js","api/helpers/apiResult.js","api/weather.js","components/Weather/DayWeather/components/WeatherInfo/helpers.js","components/Weather/MainWeatherWindow/components/WeatherInfo/index.js","components/Weather/MainWeatherWindow/helpers.js","components/Weather/MainWeatherWindow/index.js","components/Weather/WeekWeather/components/WeatherDay/constants.js","components/Weather/WeekWeather/components/WeatherDay/helpers.js","components/Weather/WeekWeather/components/WeatherDay/index.js","components/Weather/DayWeather/constants.js","components/Weather/DayWeather/helpers.js","components/Weather/WeekWeather/index.js","components/Weather/DayWeather/components/WeatherInfo/index.js","components/Weather/DayWeather/components/PlaceMark/index.js","components/Weather/DayWeather/components/LocationMap/helpers.js","components/Weather/DayWeather/components/LocationMap/index.js","components/Weather/DayWeather/index.js","components/Weather/Home/index.js","components/Weather/WindowController/index.js","App.js","index.js","components/Weather/MainWeatherWindow/style.module.css","components/Weather/WeekWeather/style.module.css","components/Weather/DayWeather/style.module.css","components/Weather/Home/classes.module.css","components/Header/Header/style.module.css"],"names":["CHANGE_CITY","saveCityInfo","search","type","payload","MEANTIME","SEVERITY","ERRORS","log","name","data","level","console","KEYS","key","preparedData","JSON","stringify","localStorage","setItem","e","Logger","getItem","parse","ADD_FAVORITE","GET_FAVORITE","combineReducers","window","state","action","actions","myLocation","favorite","appId","apiKey","Search","dispatch","useDispatch","onPlaceChange","useCallback","suggestion","latlng","latitude","lat","longitude","lng","placeholder","options","algoliaConfig","onChange","Navigator","useState","page","setPage","onPageChange","event","newValue","onTodayClick","onTomorrowClick","onWeekClick","BottomNavigation","value","showLabels","BottomNavigationAction","label","onClick","Header","className","classes","root","Box","position","Toolbar","toolbar","weatherClient","axios","create","baseURL","params","apiResult","request","a","result","getWeather","coords","lon","WeatherClient","get","weather","getWeekWeather","exclude","getWeatherFor","day","nearestWeather","list","filter","dt","Date","getDay","getWeatherInfo","weatherItem","dateTime","hours","getHours","getDateTime","temperature","kelvinTemp","main","temp","celsiusTemp","Math","round","getTemperature","weatherType","getWeatherType","windSpeed","speed","wind","getWindSpeed","city","sys","country","getWeatherCity","WeatherInfo","favorites","saveCity","isLocationUnsaved","some","location","border","container","card","Typography","variant","addBut","style","fontSize","MainWeatherWindow","useSelector","setWeather","getWeatherOfMyLocation","newWeather","useEffect","favoriteCities","newFavorite","prepareFavorite","updated","Storage","WEEKDAYS","timezoneOffset","dayTemperature","getDayTemperature","weekDay","date","getWeekDay","WeatherDay","component","monthNames","dayTitles","getFormattedDate","setDate","getDate","monthNum","getMonth","month","monthDay","WeekWeather","week","setWeek","fetchWeekWeather","newWeek","daily","dateNow","dateWeek","map","random","item","time","PlaceMark","property","properties","balloonContent","modules","getCoords","coordinate","geometry","renderPlaceMarks","LocationMap","center","zoom","config","DayWeather","todayWeather","setTodayWeather","fetchDayWeather","newDay","dayTitle","getDayTitle","Home","changeCity","Grid","spacing","xs","WindowController","renderContent","App","getMyLocation","navigator","geolocation","getCurrentPosition","error","code","message","getFavorites","store","createStore","reducer","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d6975001.chunk.js","sourcesContent":["export const CHANGE_CITY = '[CITY] change';\n\nexport const saveCityInfo = (search) => ({ type: CHANGE_CITY, payload: search });\n","export const MEANTIME = '[MEANTIME] change';\n\nexport const switchOnToday = () => ({ type: MEANTIME, payload: 'Today' });\n\nexport const switchOnTomorrow = () => ({ type: MEANTIME, payload: 'Tomorrow' });\n\nexport const switchOnWeek = () => ({ type: MEANTIME, payload: 'Week' });\n","export const SEVERITY = {\n    INFO: 'INFO',\n    WARN: 'WARN',\n    ERROR: 'ERROR',\n};\n\nexport const ERRORS = {\n    JS_ERROR: 'JS_ERROR',\n    WORKFLOW_ERROR: 'WORKFLOW_ERROR',\n    API_ERROR: 'API_ERROR',\n};\n","import { SEVERITY, ERRORS } from './constants';\n\nconst log = ({ name, data, level }) => {\n    console.log({ name, data, level }); // TODO add better implementation\n};\n\nconst info = ({ name, data }) => {\n    log({ name, data, level: SEVERITY.INFO });\n};\n\nconst warn = ({ name, data }) => {\n    log({ name, data, level: SEVERITY.WARN });\n};\n\nconst error = ({ name, data }) => {\n    log({ name, data, level: SEVERITY.ERROR });\n};\n\nexport { ERRORS };\n\nexport default {\n    info,\n    warn,\n    error,\n};\n","export const KEYS = {\n    FAVORITES: 'favorites',\n};\n","import Logger, { ERRORS } from '../../logger';\nimport { KEYS } from './constants';\n\nconst setItem = (key, data) => {\n    try {\n        const preparedData = JSON.stringify(data);\n        localStorage.setItem(key, preparedData);\n    } catch (e) {\n        Logger.error({ name: ERRORS.JS_ERROR, data: e });\n    }\n};\n\nconst getItem = (key) => {\n    let preparedData;\n    try {\n        const data = localStorage.getItem(key);\n        preparedData = JSON.parse(data);\n    } catch (e) {\n        Logger.error({ name: ERRORS.JS_ERROR, data: e });\n    }\n    return preparedData;\n};\n\nexport { KEYS };\n\nexport default {\n    setItem,\n    getItem,\n};\n","import Storage, { KEYS } from '../helpers/localStorage';\n\nexport const ADD_FAVORITE = '[FAVORITES] add';\nexport const GET_FAVORITE = '[FAVORITES] get';\n\nexport const replaceFavorites = (favoriteCities) => {\n    Storage.setItem(KEYS.FAVORITES, favoriteCities);\n    return { type: ADD_FAVORITE, payload: favoriteCities };\n};\n\nexport const getFavorites = () => {\n    const favoriteCities = Storage.getItem(KEYS.FAVORITES) || [];\n    return { type: GET_FAVORITE, payload: favoriteCities };\n};\n","import { combineReducers } from 'redux';\nimport myLocationReducer from './cityReducer';\nimport windowReducer from './windowReducer';\nimport favoriteReducer from './favoriteReducer';\n\nexport default combineReducers({\n    window: windowReducer,\n    myLocation: myLocationReducer,\n    favorite: favoriteReducer,\n});\n","import * as actions from '../actions/changeWindow';\n\nexport default function (state = 'Home', action) {\n    switch (action.type) {\n    case actions.MEANTIME:\n        return action.payload;\n    default:\n        return state;\n    }\n}\n","import * as actions from '../actions/city';\n\nexport default function (state = null, action) {\n    switch (action.type) {\n    case actions.CHANGE_CITY:\n        return action.payload;\n    default:\n        return state;\n    }\n}\n","import * as actions from '../actions/favoriteActions';\n\nexport default function (state = [], action) {\n    switch (action.type) {\n    case actions.GET_FAVORITE:\n        return action.payload;\n    case actions.ADD_FAVORITE:\n        return action.payload;\n    default:\n        return state;\n    }\n}\n","export default {\n    appId: 'plGXJ2ZDUD0D',\n    apiKey: '529c898360f48ea935b00c3ab5ee2060',\n    type: 'city',\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport AlgoliaPlaces from 'algolia-places-react';\n\nimport { saveCityInfo } from '../../../actions/city';\nimport algoliaConfig from '../../../config/algolia';\n\nconst Search = () => {\n    const dispatch = useDispatch();\n\n    const onPlaceChange = useCallback(({ suggestion }) => {\n        const { lat: latitude, lng: longitude } = suggestion.latlng;\n        const coords = { latitude, longitude };\n        dispatch(saveCityInfo(coords));\n    }, []);\n\n    return (\n        <AlgoliaPlaces\n            placeholder='Find city...'\n            options={algoliaConfig}\n            onChange={onPlaceChange}\n        />\n    );\n};\n\nexport default Search;\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n    BottomNavigation,\n    BottomNavigationAction,\n} from '@material-ui/core';\n\nimport {\n    switchOnToday,\n    switchOnTomorrow,\n    switchOnWeek,\n} from '../../../actions/changeWindow';\n\nconst Navigator = () => {\n    const dispatch = useDispatch();\n\n    const [page, setPage] = useState('');\n\n    const onPageChange = useCallback((event, newValue) => setPage(newValue), []);\n\n    const onTodayClick = useCallback(() => dispatch(switchOnToday()), []);\n    const onTomorrowClick = useCallback(() => dispatch(switchOnTomorrow()), []);\n    const onWeekClick = useCallback(() => dispatch(switchOnWeek()), []);\n\n    return (\n        <BottomNavigation\n            value={page}\n            onChange={onPageChange}\n            showLabels\n        >\n            <BottomNavigationAction label=\"Today\" onClick={onTodayClick}/>\n            <BottomNavigationAction label=\"Tomorrow\" onClick={onTomorrowClick}/>\n            <BottomNavigationAction label=\"Week\" onClick={onWeekClick}/>\n        </BottomNavigation>\n    );\n};\n\nexport default Navigator;\n","import React from 'react';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Box } from '@material-ui/core';\n\nimport Search from '../Search/Search';\nimport Navigator from '../Navigator/Navigator';\n\nimport classes from './style.module.css';\n\nconst Header = () => (\n    <div className={classes.root}>\n        <Box position=\"static\">\n            <Toolbar className={classes.toolbar}>\n                <Navigator/>\n                <Search/>\n            </Toolbar>\n        </Box>\n    </div>\n);\nexport default Header;\n","import axios from 'axios';\nimport KEYS from '../../config/apiKeys';\n\nconst weatherClient = axios.create({\n    baseURL: 'https://api.openweathermap.org/data/2.5',\n    params: {\n        appId: KEYS.WEATHER,\n    },\n});\n\nexport default weatherClient;\n","export default {\n    WEATHER: '5dd71aff0b74d44817be6ac1785e9b46',\n};\n","import Logger, { ERRORS } from '../../logger';\n\nconst apiResult = async (request) => {\n    let result = {};\n    try {\n        result = await request;\n    } catch (e) {\n        Logger.error({ name: ERRORS.API_ERROR, data: e });\n    }\n    const { data } = result;\n    return data;\n};\n\nexport default apiResult;\n","import WeatherClient from '../api/clients/weatherClient';\nimport apiResult from '../api/helpers/apiResult';\n\nexport const getWeather = async (coords) => {\n    const {\n        latitude: lat = '0',\n        longitude: lon = '0',\n    } = coords;\n    const weather = await apiResult(\n        WeatherClient.get('/weather', { params: { lat, lon } }),\n    );\n    return weather || {};\n};\n\nexport const getWeekWeather = async (coords) => {\n    const {\n        latitude: lat = '0',\n        longitude: lon = '0',\n    } = coords;\n    const weather = await apiResult(\n        WeatherClient.get('/onecall', { params: { lat, lon, exclude: 'current,minutely,hourly,alerts' } }),\n    );\n    return weather || [];\n};\n\nexport const getWeatherFor = async (coords, day = 0) => {\n    const {\n        latitude: lat = '0',\n        longitude: lon = '0',\n    } = coords;\n    const nearestWeather = await apiResult(\n        WeatherClient.get('/forecast', { params: { lat, lon, exclude: 'current,minutely,hourly,alerts' } }),\n    );\n    let weather = [];\n    if (nearestWeather && nearestWeather.list) {\n        weather = nearestWeather.list.filter(({ dt }) => {\n            const todayDate = new Date().getDay() + day;\n            const date = new Date(dt * 1000).getDay();\n            return todayDate === date;\n        });\n    }\n    return weather;\n};\n","const getDateTime = (weatherItem) => {\n    const date = new Date(weatherItem.dt * 1000);\n    const hours = date.getHours();\n    return `${hours}:00`;\n};\n\nconst getTemperature = (weatherItem) => {\n    const { temp: kelvinTemp } = weatherItem.main;\n    const celsiusTemp = Math.round(kelvinTemp - 273.15);\n    return `${celsiusTemp} ℃`;\n};\n\nconst getWeatherType = (weatherItem) => weatherItem.weather[0].main;\n\nconst getWindSpeed = (weatherItem) => {\n    const { speed } = weatherItem.wind;\n    return `Wind - ${speed} per second`;\n};\n\nconst getWeatherCity = (weatherItem) => `${weatherItem.name}, ${weatherItem.sys.country}`;\n\nexport const getWeatherInfo = (weatherItem) => {\n    const dateTime = getDateTime(weatherItem);\n    const temperature = getTemperature(weatherItem);\n    const weatherType = getWeatherType(weatherItem);\n    const windSpeed = getWindSpeed(weatherItem);\n    const city = getWeatherCity(weatherItem);\n    return {\n        dateTime,\n        temperature,\n        weatherType,\n        windSpeed,\n        city,\n    };\n};\n","import { getWeatherInfo } from '../../../DayWeather/components/WeatherInfo/helpers';\nimport { isCoordsTheSame } from '../../helpers';\nimport { Box, Typography } from '@material-ui/core';\nimport classes from '../../style.module.css';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport React from 'react';\nimport { array, func, object } from 'prop-types';\n\nconst WeatherInfo = ({\n    favorites,\n    myLocation,\n    weather,\n    saveCity,\n}) => {\n    const {\n        windSpeed,\n        temperature,\n        city,\n        weatherType,\n    } = getWeatherInfo(weather);\n    const isLocationUnsaved = !favorites.some(favorite => isCoordsTheSame(myLocation, favorite));\n    return (\n        <div>\n            <Box border={1} className={classes.root}>\n                <div className={classes.container}>\n                    <div className={classes.card}>\n                        <Typography variant={'h3'}>{temperature}</Typography>\n                        <Typography variant={'h4'}>{city}</Typography>\n                        <Typography variant={'h6'}>{weatherType} </Typography>\n                        <Typography variant={'h6'}>{windSpeed}</Typography>\n                    </div>\n                </div>\n                {isLocationUnsaved && (\n                    <div className={classes.addBut}>\n                        <AddCircleOutlineIcon onClick={saveCity} style={{ fontSize: 40 }}/>\n                    </div>\n                )}\n            </Box>\n        </div>\n    );\n};\n\nWeatherInfo.propTypes = {\n    favorites: array,\n    myLocation: object,\n    weather: object,\n    saveCity: func,\n};\n\nexport default WeatherInfo;\n","export const prepareFavorite = (weather, location) => ({\n    city: weather.name + ',' + weather.sys.country,\n    coords: {\n        latitude: location.latitude,\n        longitude: location.longitude,\n    },\n});\n\nexport const isCoordsTheSame = (coords, location) => {\n    return JSON.stringify(location.coords) === JSON.stringify(coords);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Typography } from '@material-ui/core';\n\nimport { getWeather } from '../../../api/weather';\nimport { replaceFavorites } from '../../../actions/favoriteActions';\nimport { prepareFavorite } from './helpers';\n\nimport WeatherInfo from './components/WeatherInfo';\n\nconst MainWeatherWindow = () => {\n    const dispatch = useDispatch();\n    const myLocation = useSelector((state) => state.myLocation);\n    const favorites = useSelector(state => state.favorite);\n\n    const [weather, setWeather] = useState('');\n\n    const getWeatherOfMyLocation = async () => {\n        if (myLocation) {\n            const newWeather = await getWeather(myLocation);\n            setWeather(newWeather);\n        }\n    };\n\n    useEffect(() => getWeatherOfMyLocation(), [myLocation]);\n\n    const saveCity = () => {\n        const newFavorite = prepareFavorite(weather, myLocation);\n        const updated = [...favorites, newFavorite];\n        dispatch(replaceFavorites(updated));\n    };\n\n    return (\n        <>\n            { weather\n                ? <WeatherInfo\n                    weather={weather}\n                    favorites={favorites}\n                    myLocation={myLocation}\n                    saveCity={saveCity}\n                />\n                : <Typography variant={'h3'}>Geolocation unspecified</Typography>\n            }\n        </>\n    );\n};\n\nexport default MainWeatherWindow;\n","export const WEEKDAYS = [\n    'Sunday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Monday',\n];\n","import { WEEKDAYS } from './constants';\n\nconst getDayTemperature = (weatherItem) => {\n    const { day: kelvinTemp } = weatherItem.temp;\n    const celsiusTemp = Math.round(kelvinTemp - 273.15);\n    return `${celsiusTemp} ℃`;\n};\n\nconst getWeatherType = (weatherItem) => weatherItem.weather[0].main;\n\nconst getWeekDay = (weatherItem) => {\n    const date = new Date(weatherItem.dt * 1000);\n    const weekDay = WEEKDAYS[date.getDay()];\n    return weekDay;\n};\n\nexport const getWeatherInfo = (weatherItem, timezoneOffset) => {\n    const dayTemperature = getDayTemperature(weatherItem);\n    const weatherType = getWeatherType(weatherItem);\n    const weekDay = getWeekDay(weatherItem);\n    return {\n        dayTemperature,\n        weatherType,\n        weekDay,\n    };\n};\n","import React from 'react';\n\nimport { Box, Typography } from '@material-ui/core';\nimport { getWeatherInfo } from './helpers';\nimport { object } from 'prop-types';\n\nconst WeatherDay = ({ classes, weatherItem }) => {\n    const {\n        weatherType,\n        weekDay,\n        dayTemperature,\n    } = getWeatherInfo(weatherItem);\n    return (\n        <Box border={1} className={classes.card}>\n            <Typography component=\"div\">{weekDay}</Typography>\n            <Typography component=\"div\">{dayTemperature}</Typography>\n            <Typography component=\"div\">{weatherType}</Typography>\n        </Box>\n    );\n};\n\nWeatherDay.propTypes = {\n    classes: object,\n    weatherItem: object,\n};\n\nexport default WeatherDay;\n","export const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nexport const dayTitles = [\n    'Today',\n    'Tomorrow',\n];\n","import { monthNames, dayTitles } from './constants';\n\nexport const getFormattedDate = (day) => {\n    const date = new Date();\n    date.setDate(date.getDate() + day);\n    const monthNum = date.getMonth();\n    const month = monthNames[monthNum];\n    const monthDay = date.getDate();\n    return `${month}, ${monthDay}`;\n};\n\nexport const getDayTitle = (day) => dayTitles[day];\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport WeatherDay from './components/WeatherDay';\nimport { getWeekWeather } from '../../../api/weather';\n\nimport classes from './style.module.css';\nimport { getFormattedDate } from '../DayWeather/helpers';\n\nconst WeekWeather = () => {\n    const myLocation = useSelector((state) => state.myLocation);\n\n    const [week, setWeek] = useState([]);\n\n    const fetchWeekWeather = useCallback(async (location) => {\n        const newWeek = await getWeekWeather(location);\n        const { daily } = newWeek;\n        setWeek(daily);\n    }, []);\n\n    useEffect(() => fetchWeekWeather(myLocation), [myLocation]);\n    const dateNow = getFormattedDate(0);\n    const dateWeek = getFormattedDate(8);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <h2>Week</h2>\n                <h3>{dateNow} - {dateWeek}</h3>\n                <div className={classes.root}>\n                    {week.map(weatherItem => <WeatherDay key = { Math.random()} classes={classes} weatherItem={weatherItem}/>)}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WeekWeather;\n","import React from 'react';\n\nimport { getWeatherInfo } from './helpers';\nimport { array, object } from 'prop-types';\n\nconst WeatherInfo = ({ classes, weather }) => weather.map(item => {\n    const {\n        dateTime,\n        temperature,\n        weatherType,\n        windSpeed,\n    } = getWeatherInfo(item);\n\n    return (\n        <tr key={dateTime}>\n            <td className={classes.time}>\n                {dateTime}\n            </td>\n            <td className={classes.weather}>\n                {temperature}\n            </td>\n            <td className={classes.weather}>\n                {weatherType}\n            </td>\n            <td className={classes.weather}>\n                {windSpeed}\n            </td>\n        </tr>\n    );\n});\n\nWeatherInfo.propTypes = {\n    classes: object,\n    weather: array,\n};\n\nexport default WeatherInfo;\n","import React, { useEffect, useState } from 'react';\nimport { getCoords } from '../LocationMap/helpers';\nimport { Placemark } from 'react-yandex-maps';\nimport { getWeather } from '../../../../../api/weather';\nimport { useSelector } from 'react-redux';\nimport { getWeatherInfo } from '../WeatherInfo/helpers';\nimport { object } from 'prop-types';\n\nconst PlaceMark = ({ location }) => {\n    const myLocation = useSelector((state) => state.myLocation);\n    const [weather, setWeather] = useState('');\n\n    const getWeatherOfMyLocation = async () => {\n        if (myLocation) {\n            const newWeather = await getWeather(myLocation);\n            setWeather(newWeather);\n        }\n    };\n\n    useEffect(() => getWeatherOfMyLocation(), [myLocation]);\n    if (weather) {\n        const renderPlaceMarks = (location) => getCoords(location).map(coordinate =>\n            <Placemark\n                key={Math.random()}\n                geometry={coordinate}\n                {...property}\n            />);\n        const {\n            temperature,\n            weatherType,\n        } = getWeatherInfo(weather);\n\n        const property = {\n            properties: {\n                balloonContent: `${temperature}, ${weatherType}`,\n            },\n            modules: ['geoObject.addon.balloon', 'geoObject.addon.hint'],\n        };\n\n        return (\n            renderPlaceMarks(location)\n        );\n    }\n    return null;\n};\n\nPlaceMark.propTypes = {\n    location: object,\n};\n\nexport default PlaceMark;\n","export const getCoords = (location) => [\n    [location.latitude, location.longitude],\n];\n","import { Map, YMaps } from 'react-yandex-maps';\nimport { Box } from '@material-ui/core';\nimport React from 'react';\nimport { object } from 'prop-types';\nimport PlaceMark from '../PlaceMark';\n\nconst LocationMap = ({ location, classes }) => {\n    const config = (location) => ({ center: [location.latitude, location.longitude], zoom: 8 });\n    return (\n        <Box border={1}>\n            <YMaps>\n                <Map state={config(location)} className={classes.map}>\n                    <PlaceMark location={location}/>\n                </Map>\n            </YMaps>\n        </Box>\n    );\n};\n\nLocationMap.propTypes = {\n    location: object,\n    classes: object,\n};\n\nexport default LocationMap;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { number } from 'prop-types';\n\nimport { Typography } from '@material-ui/core';\n\nimport { getWeatherFor } from '../../../api/weather';\nimport WeatherInfo from './components/WeatherInfo';\nimport LocationMap from './components/LocationMap';\nimport {\n    getFormattedDate,\n    getDayTitle,\n} from './helpers';\n\nimport classes from './style.module.css';\n\nconst DayWeather = ({ day }) => {\n    const myLocation = useSelector((state) => state.myLocation);\n\n    const [todayWeather, setTodayWeather] = useState([]);\n\n    const fetchDayWeather = useCallback(async (location, day) => {\n        const newDay = await getWeatherFor(location, day);\n        setTodayWeather(newDay);\n    }, []);\n\n    useEffect(() => {\n        fetchDayWeather(myLocation, day);\n    }, [myLocation, day]);\n\n    const date = getFormattedDate(day);\n    const dayTitle = getDayTitle(day);\n\n    return (\n        <div className=\"container\">\n            <div className={classes.container}>\n                <Typography variant=\"h3\">{dayTitle}</Typography>\n                <Typography variant=\"h5\">{date}</Typography>\n                <table>\n                    <thead>\n                        <tr>\n                            <td className={classes.time}>\n                            Time\n                            </td>\n                            <td>\n                            Weather\n                            </td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <WeatherInfo classes={classes} weather={todayWeather}/>\n                    </tbody>\n                </table>\n            </div>\n            <div>\n                <LocationMap location={myLocation} classes={classes} />\n            </div>\n        </div>\n    );\n};\n\nDayWeather.propTypes = {\n    day: number,\n};\n\nexport default DayWeather;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    Box,\n    Grid,\n    Typography,\n} from '@material-ui/core';\n\nimport { saveCityInfo } from '../../../actions/city';\n\nimport classes from './classes.module.css';\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const favorites = useSelector(state => state.favorite);\n\n    const changeCity = useCallback((coords) => {\n        dispatch(saveCityInfo(coords));\n    }, []);\n\n    const renderFavorites = () => favorites.map(item => {\n        const {\n            coords,\n            city,\n        } = item;\n        return (\n            <Grid key={coords.latitude} item xs={2} >\n                <Box border={1} className={classes.card} onClick={() => changeCity(coords)}>\n                    <Typography component=\"div\" >{city}</Typography>\n                </Box>\n            </Grid>\n        );\n    });\n\n    return (\n        <div className={classes.main}>\n            <h2>Saved cities</h2>\n            <div className={classes.root}>\n                <div className={classes.container}>\n                    <Grid container spacing={10}>\n                        {renderFavorites()}\n                    </Grid>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport WeekWeather from '../WeekWeather';\nimport DayWeather from '../DayWeather';\nimport Home from '../Home';\n\nconst WindowController = () => {\n    const window = useSelector((state) => state.window);\n\n    const renderContent = () => {\n        switch (window) {\n        case 'Home':\n            return <Home/>;\n        case 'Today':\n            return <DayWeather day={0}/>;\n        case 'Tomorrow':\n            return <DayWeather day={1}/>;\n        case 'Week':\n            return <WeekWeather/>;\n        default:\n            return <Home/>;\n        }\n    };\n\n    return (renderContent());\n};\n\nexport default WindowController;\n","import './App.css';\nimport Header from './components/Header/Header';\nimport MainWeatherWindow from './components/Weather/MainWeatherWindow';\nimport WindowController from './components/Weather/WindowController';\nimport { useDispatch } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { saveCityInfo } from './actions/city';\nimport { getFavorites } from './actions/favoriteActions';\n\nfunction App () {\n    const dispatch = useDispatch();\n    const getMyLocation = () => {\n        navigator.geolocation.getCurrentPosition(\n            function (position) {\n                const coords = {\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude,\n                };\n                dispatch(saveCityInfo(coords));\n            },\n            function (error) {\n                console.error('Error Code = ' + error.code + ' - ' + error.message);\n            },\n        );\n        dispatch(getFavorites());\n    };\n    useEffect(() => getMyLocation(), []);\n    return (\n        <div>\n            <Header/>\n            <MainWeatherWindow/>\n            <WindowController/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from '../src/reducers';\nimport reduxThunk from 'redux-thunk';\nimport App from './App';\n\nconst store = createStore(reducer, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}><App/></Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1bicT\",\"container\":\"style_container__2BvEL\",\"card\":\"style_card__10tqU\",\"addBut\":\"style_addBut__1VpwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__3M-tg\",\"container\":\"style_container__2wQGX\",\"card\":\"style_card__gakWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day\":\"style_day__3ciBP\",\"map\":\"style_map__3Sd9Q\",\"time\":\"style_time__rtnN6\",\"weather\":\"style_weather__1yEj1\",\"container\":\"style_container__1qyWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"classes_card__1xn16\",\"root\":\"classes_root__3A8EG\",\"container\":\"classes_container__2BFrY\",\"main\":\"classes_main__3f9Om\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1W2rm\",\"toolbar\":\"style_toolbar__2FJdD\"};"],"sourceRoot":""}